name: "Set environment variables"
description: "Configures environment variables for a workflow"
inputs:
  varFilePath:
    description: "File path(s) to variable file(s) delimited by a semicolon"
    required: false
    default: ./.github/variables/default.env
runs:
  using: "composite"
  steps:
    - run: |
        Function Get-SectionFile
        {

          Param
          (
            [parameter(mandatory = $true)]
            [string]
            $path
          )
          $inifile = $path
          $ini = @{}

          Get-Content $inifile | ForEach-Object {
            write-verbose "trim" -verbose
            $_.Trim()
          } | Where-Object {
            $_ -notmatch '^(#|$)'
          } | ForEach-Object {
            if ($_ -match '^\[section:.*\]$')
            {
              $section = $_ -replace '\[section:|\]'
              $ini[$section] = @{}
            }
            else
            {
              $key, $value = $_ -split '\s*=\s*', 2
              $ini[$section][$key] = $value
            }
          }

          $ini

        }


        $env_var_array = "${{ inputs.varFilePath }}" -split ";" -replace '::.*'

        write-verbose ("These are the ENV files:`n {0}" -f ($env_var_array -join "`n")) -verbose
        $env_var_array | foreach-Object {
          $items = $_ -split '::'
          $file = $items | where { $_ -match '\.env'}
          $sections = $items | where {$_ -notmatch '\.env'}
          $number_of_sections = ($sections | Measure-Object).count

          if($number_of_sections -gt 0)
          {
              write-verbose "Beginning check for sections" -verbose
              $section_object = Get-SectionFile -path $file
              write-verbose "after check for sections" -verbose

              # load the sections variables
              foreach($s in $sections)
              {
                write-verbose "Loading variables from section: [$s]" -verbose

                 $sec_hash = $section_object[$s]
                 $sec_hash.GetEnumerator() | ForEach-Object {
                    write-verbose ("Loading variable {0} from section: ['{1}'']" -f "$($_.key)=$($_.value)", $s)
                    "$($_.key)=$($_.value)" | Out-File -FilePath $Env:GITHUB_ENV -Append
                  }
              }

          }
          else
          {
              $parent = Split-Path $file -Parent
              $leaf = (Split-Path $file -Leaf).ToLowerInvariant()
              $var_file = Join-Path $parent $leaf
              write-verbose "Loading file: [$var_file]" -verbose
              get-content $var_file | foreach-Object {
                #$name,$value = $_.split('=')
                write-verbose "Loading variable: [$_]"
                "$_" | Out-File -FilePath $Env:GITHUB_ENV -Append
              }
          }



        }
      shell: pwsh
