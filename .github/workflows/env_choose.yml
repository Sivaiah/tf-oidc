name: Environments

on:
  workflow_dispatch:
    inputs:
      destroy:
        type: boolean
        description: Destroy environment?
        required: true
        default: false


  pull_request:
    paths:
    - infra/**

  push:
    branches:
      #- 'main'
      - 'releases/**'


env:
  tf_actions_working_dir: infra

jobs:
  plan:
    name:   ${{matrix.runner}} - ${{ matrix.environment }}
    runs-on: [ '${{ matrix.runner }}']
    environment:
      name: ${{ matrix.environment }}
    strategy:
      max-parallel: 2
      matrix:
         include:
           - environment: dev
             runner: ubuntu-latest
             envfile: dev.env
           - environment: prod
             runner: windows-latest
             envfile: prod.env

    steps:
    - uses: actions/checkout@v2


    - name: 'Configure Environment variables using the default variables file'
      uses: ./.github/actions/set-env-vars
      with:
        varFilePath: ./.github/variables/${{ matrix.environment }}.env

    # - name: PowerShell Script - pscustomobject
    #   run: |
    #     write-output ("{0} - {1} - {2}" -f  ("#" * 30),'[Begin: Github Workspace]',("#" * 30))

    #     . ps/output.ps1 -verbose -outvariable myout
    #     "num1=$($myout.number1)" | Out-File -FilePath $Env:GITHUB_ENV -Append
    #     "num2=$($myout.number2)" | Out-File -FilePath $Env:GITHUB_ENV -Append

    #     write-output ("{0} - {1} - {2}" -f  ("#" * 30),'[End: Github Workspace]',("#" * 30))
    #   shell: pwsh

    # - name: PowerShell Script - output env vars
    #   run: |
    #     write-output $env:num1
    #     write-output $env:num2

    #   shell: pwsh

    # - name: PowerShell Script - Hash table
    #   run: |
    #     write-output ("{0} - {1} - {2}" -f  ("#" * 30),'[Begin: Setting Environment Variables]',("#" * 30))

    #     . ps/hash.ps1 -verbose -outvariable myout
    #       $myout | Get-Member -MemberType NoteProperty | ForEach-Object {
    #           "$($_.Name)=$($myout.$($_.Name))"
    #       } | Out-File -FilePath $Env:GITHUB_ENV -Append

    #     write-output ("{0} - {1} - {2}" -f  ("#" * 30),'[End: Setting Environment Variables]',("#" * 30))
    #   shell: pwsh

    # - name: PowerShell Script - output env vars hash - env vars are case-sensitive
    #   run: |
    #     write-output $env:NUMBER3
    #     write-output $env:NUMBER4
    #   shell: pwsh